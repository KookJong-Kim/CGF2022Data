import pandas as pd
import matplotlib.pyplot as plt

# 파일 경로 설정
file_path = "신용보증기금_재물안전관리정보보안교육정보_20211021.csv"

# 데이터 불러오기 (인코딩 오류 방지를 위해 다양한 인코딩 시도)
encodings = ["utf-8", "euc-kr", "cp949"]
for encoding in encodings:
    try:
        df = pd.read_csv(file_path, encoding=encoding)
        break
    except UnicodeDecodeError:
        continue

# 1. 참석률 분석
# 참석률 계산 및 데이터 전처리
df["참석률"] = (df["참석인원수"] / df["대상인원수"]) * 100

# 이상치 제거 (0% 미만 또는 100% 초과 데이터 삭제)
df = df[(df["참석률"] >= 0) & (df["참석률"] <= 100)]

# 참석률 기본 통계량 확인
print("참석률 통계 요약:")
print(df["참석률"].describe())

# 참석률 분포 시각화
plt.figure(figsize=(10, 5))
plt.hist(df["참석률"], bins=20, edgecolor="black", alpha=0.7, color="skyblue")
plt.xlabel("참석률 (%)")
plt.ylabel("빈도수")
plt.title("참석률 분포")
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.show()

# 2. 강사별 평균 참석률 분석
instructor_attend_rate = df.groupby("강사직원번호")["참석률"].mean().sort_values(ascending=False)

# 강사별 평균 참석률 시각화
plt.figure(figsize=(12, 6))
instructor_attend_rate.plot(kind="bar", color="lightgreen", edgecolor="black")
plt.xlabel("강사직원번호")
plt.ylabel("평균 참석률 (%)")
plt.title("강사별 평균 참석률")
plt.xticks(rotation=45)
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.show()

# 3. 삭제된 데이터 비율 분석
# 삭제된 데이터 비율 계산
deleted_data_ratio = df["삭제여부"].value_counts(normalize=True) * 100

# 삭제된 데이터 비율 출력
print("삭제된 데이터 비율:")
print(deleted_data_ratio)

# 삭제된 데이터 비율 시각화
plt.figure(figsize=(6, 6))
deleted_data_ratio.plot(kind="pie", autopct="%.1f%%", colors=["lightcoral", "lightblue"], startangle=90, explode=[0.1, 0])
plt.title("삭제된 데이터 비율")
plt.ylabel("")
plt.show()

# 4. 강사별 교육 참가율 비교
# 강사별 총 대상 인원수 및 참석 인원수 계산
grouped_instructor = df.groupby("강사직원번호")[["대상인원수", "참석인원수"]].sum()
grouped_instructor["교육 참가율"] = (grouped_instructor["참석인원수"] / grouped_instructor["대상인원수"]) * 100

# 강사별 교육 참가율 출력
print("강사별 교육 참가율:")
print(grouped_instructor.sort_values("교육 참가율", ascending=False))

# 강사별 교육 참가율 시각화
plt.figure(figsize=(12, 6))
grouped_instructor["교육 참가율"].sort_values(ascending=False).plot(kind="bar", color="orange", edgecolor="black")
plt.xlabel("강사직원번호")
plt.ylabel("교육 참가율 (%)")
plt.title("강사별 교육 참가율 비교")
plt.xticks(rotation=45)
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.show()

# 5. 특정 직원의 데이터 처리 빈도 분석
# 처리 직원별 데이터 처리 횟수 계산
employee_processing_freq = df["처리직원번호"].value_counts()

# 처리 직원별 데이터 처리 횟수 출력
print("처리 직원별 데이터 처리 횟수:")
print(employee_processing_freq)

# 처리 직원별 데이터 처리 빈도 시각화
plt.figure(figsize=(12, 6))
employee_processing_freq.plot(kind="bar", color="blue", edgecolor="black")
plt.xlabel("처리직원번호")
plt.ylabel("데이터 처리 횟수")
plt.title("특정 직원의 데이터 처리 빈도")
plt.xticks(rotation=45)
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.show()
